{
	"info": {
		"_postman_id": "ffaf7fe7-52d8-4851-9d48-b004b8bfb61f",
		"name": "HW_2_Postman_Pustovar",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Ep_1-first",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"pm.test(\"Body matches string - This is the first responce from server!\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_2-user_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Variable = JSON.parse(responseBody)\r",
							"var Variable_request = request.data\r",
							"\r",
							"pm.test(\"Check_name\", function () {\r",
							"    pm.expect(Variable.name).to.eql(\"Anton\");\r",
							"});\r",
							"\r",
							"pm.test(\"Check_age\", function () {\r",
							"    pm.expect(Variable.age).to.eql+(35);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_salary\", function () {\r",
							"    pm.expect(Variable.salary).to.eql(500);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_name_req\", function () {\r",
							"    pm.expect(Variable.name).to.eql(Variable_request.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check age_req\", function () {\r",
							"    pm.expect(Variable.age).to.eql(Variable_request.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_salary_req\", function () {\r",
							"    pm.expect(Variable.salary).to.eql +(Variable_request.salary);\r",
							"});\r",
							"\r",
							"console.log(\"Family = \" + Variable.family.children)\r",
							"\r",
							"pm.test(\"Check_u_salary_1_5_years_req\", function () {\r",
							"    pm.expect(Variable.family.u_salary_1_5_year).to.eql+(Variable_request.salary*4)\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Anton",
							"type": "default"
						},
						{
							"key": "age",
							"value": "35",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "500",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_3 - object_info_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Variable = JSON.parse(responseBody)\r",
							"var Variable_request = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Check_name_req\", function () {\r",
							"    pm.expect(Variable.name).to.eql(Variable_request.name);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_age_req\", function () {\r",
							"    pm.expect(Variable.age).to.eql(Variable_request.age);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_salary_req\", function () {\r",
							"    pm.expect(Variable.salary).to.eql+(Variable_request.salary);\r",
							"});\r",
							"\r",
							"console.log(\"Family = \" + Variable.family.children)\r",
							"\r",
							"pm.test(\"Dog_have_name\", function () {\r",
							"    pm.expect(Variable.family.pets.dog).to.have.property(\"name\")\r",
							"});\r",
							" \r",
							"pm.test(\"Dog_have_age\", function () {\r",
							"    pm.expect(Variable.family.pets.dog).to.have.property(\"age\")\r",
							"});\r",
							"\r",
							"pm.test(\"Dog_name = Lucky\", function () {\r",
							"    pm.expect(Variable.family.pets.dog.name).to.eql(\"Luky\");\r",
							"});\r",
							"\r",
							"pm.test(\"Dog_age = 4\", function () {\r",
							"    pm.expect(Variable.family.pets.dog.age).to.eql(4);\r",
							"});\r",
							"\r",
							"\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Anton&age=35&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Anton"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_4 - object_info_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Variable = JSON.parse(responseBody)\r",
							"var Variable_request = pm.request.url.query.toObject()\r",
							"\r",
							"pm.test(\"Check_name_req\", function () {\r",
							"    pm.expect(Variable.name).to.eql(pm.request.url.query.get(\"name\"));\r",
							"});\r",
							"\r",
							"pm.test(\"Check_age_req\", function () {\r",
							"    pm.expect(Variable.age).to.eql+(pm.request.url.query.get(\"age\"));\r",
							"});\r",
							"\r",
							"Salary_req = parseInt(Variable_request.salary)\r",
							"Salary = parseInt(Variable.salary)\r",
							"Salary_1 = parseInt(Variable.salary[0])\r",
							"Salary_2 = parseInt(Variable.salary[1])\r",
							"Salary_3 = parseInt(Variable.salary[2])\r",
							"console.log('Variable_request.salary = ', Salary_req)\r",
							"console.log('Variable.salary = ', Salary)\r",
							"console.log('Variable.salary_1 = ', Salary_1)\r",
							"console.log('Variable.salary_2 = ', Salary_2)\r",
							"console.log('Variable.salary_3 = ', Salary_3)\r",
							"\r",
							"pm.test(\"Check_Salary_1\", function () {\r",
							"    pm.expect(Salary_1).to.eql (Salary_req);\r",
							"});\r",
							"\r",
							"pm.test(\"Check_Salary_2= 1000\", function () {\r",
							"    pm.expect(Salary_2).to.eql (Salary_req*2);\r",
							"});\r",
							"pm.test(\"Check_Salary_3 = 1500\", function () {\r",
							"    pm.expect(Salary_3).to.eql (Salary_req*3);\r",
							"});\r",
							"\r",
							"pm.environment.set(\"name\", Variable.name);\r",
							"pm.environment.set(\"age\", Variable.age);\r",
							"pm.environment.set(\"salary\", Salary_req);\r",
							"\r",
							"for (var sal_number in Variable.salary) {\r",
							"console.log(\"salary [\"+ sal_number + \"] =\" +Variable.salary[sal_number]);\r",
							"}\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Anton&age=35&salary=500",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Anton"
						},
						{
							"key": "age",
							"value": "35"
						},
						{
							"key": "salary",
							"value": "500"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "EP_7 - user_info_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"\r",
							"var Variable = JSON.parse(responseBody)\r",
							"var Variable_request = request.data\r",
							"\r",
							"pm.test(\"Response_have_start_qa_salary\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"start_qa_salary\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response_qa_salary_after_6_months\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"qa_salary_after_6_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response_have_qa_salary_after_12_months\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"qa_salary_after_12_months\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response_have_qa_salary_after_1.5_year\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"qa_salary_after_1.5_year\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response_have_qa_salary_after_3.5_years\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"qa_salary_after_3.5_years\");\r",
							"});\r",
							"\r",
							"pm.test(\"Response_have_person\", function () {\r",
							"    pm.expect(Variable).have.to.property(\"person\");\r",
							"});\r",
							"\r",
							"let Salary_req = parseInt(Variable_request.salary)\r",
							"let Sal_start = parseInt(Variable.start_qa_salary)\r",
							"pm.test(\"Check_start_qa_salary = salary from request\", function () {\r",
							"    pm.expect(Sal_start).to.eql(Salary_req);\r",
							"});\r",
							"\r",
							"let  Sal_6_months = parseInt(Variable.qa_salary_after_6_months)\r",
							"pm.test(\"Check_qa_salary_after_6_months = salary from request*2\", function () {\r",
							"    pm.expect(Sal_6_months).to.eql(Salary_req*2);\r",
							"});\r",
							"\r",
							"let  Sal_12_months = parseInt(Variable.qa_salary_after_12_months)\r",
							"pm.test(\"Check_qa_salary_after_12_months = salary from request*2,7\", function () {\r",
							"    pm.expect(Sal_12_months).to.eql(Salary_req*2.7);\r",
							"});\r",
							"\r",
							"let  Sal_1_5_year = parseInt(Variable[\"qa_salary_after_1.5_year\"])\r",
							"pm.test(\"Check_qa_salary_after_1.5_year = salary from request*3,3\", function () {\r",
							"    pm.expect(Sal_1_5_year).to.eql(Salary_req*3.3);\r",
							"});\r",
							"\r",
							"let  Sal_3_5_years = parseInt(Variable[\"qa_salary_after_3.5_years\"])\r",
							"pm.test(\"Check_qa_salary_after_3.5_year = salary from request*3,8\", function () {\r",
							"    pm.expect(Sal_3_5_years).to.eql(Salary_req*3.8);\r",
							"});\r",
							"\r",
							"let  U_name = parseInt(Variable.person.u_name[1])\r",
							"pm.test(\"Check_person_u_name = salary from request\", function () {\r",
							"    pm.expect(U_name).to.eql(Salary_req);\r",
							"});\r",
							"\r",
							"let Age_req = parseInt(Variable_request.age)\r",
							"let U_age = parseInt(Variable.person.u_name[2])\r",
							"pm.test(\"Check_person_u_age = age_from_request\", function () {\r",
							"    pm.expect(U_age).to.eql(Age_req);\r",
							"});\r",
							"\r",
							"let  Sal_5_years = parseInt(Variable.person.u_salary_5_years)\r",
							"pm.test(\"Check_u_salary_5_years = salary from request*4,2\", function () {\r",
							"    pm.expect(Sal_5_years).to.eql(Salary_req*4.2);\r",
							"});\r",
							"\r",
							"for(i in Variable.person) {\r",
							"console.log(i, \":\", Variable.person[i]);\r",
							"}"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "{{name}}",
							"type": "default"
						},
						{
							"key": "age",
							"value": "{{age}}",
							"type": "default"
						},
						{
							"key": "salary",
							"value": "{{salary}}",
							"type": "default"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_2",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_2"
					]
				}
			},
			"response": []
		}
	]
}